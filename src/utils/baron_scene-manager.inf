
!!==============================================================================
!!
!!	EL BARÓN
!!	Objeto que registra el estado global de la historia
!!
!!==============================================================================
!!
!!	Archivo:		baron_state.inf
!!	Autor(es):		Victor Gijsbers
!!					J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Español)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		Máquina-Z/Glulx
!!	Versión:		0.0
!!	Fecha:			2020/01/XX
!!
!!------------------------------------------------------------------------------
!!
!!	Este archivo forma parte de la ficción interactiva EL BARÓN.
!!
!!	EL BARÓN es software libre: usted puede redistribuirlo y/o
!!	modificarlo bajo los términos de la Licencia Pública General
!!	GNU publicada por la Fundación para el Software Libre, ya
!!	sea la versión 3 de la Licencia, o (a su elección) cualquier
!!	versión posterior.
!!
!!	EL BARÓN se distribuye con la esperanza de que sea útil,
!!	pero SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
!!	MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO.
!!	Consulte los detalles de la Licencia Pública General GNU
!!	para más información.
!!
!!	Debería haber recibido una copia de la Licencia Pública
!!	General GNU junto a EL BARÓN. En caso contrario, consulte
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (c) 2004, Victor Gijsbers
!!	Copyright (c) 2020, J. Francisco Martín
!!
!!------------------------------------------------------------------------------

Object State "(State)"
	with
		!!
		change_scene [ new_scene;
		],
		!! Retorna la escena en que se encuentra la historia.
		!!
		!!	@returns {integer} escena actual
		!!	@version 2020/10/17
		get_current_scene [;
			return self.current_scene;
		],
		!! 
		reset_current_scene [;
			switch (self.current_scene) {

			}
		],
		!! Establece la nueva escena en que se encuentra la historia.
		!!
		!!	@param {integer} new_scene  - Valor de la nueva escena
		!!	@returns {integer} El valor de la escena anterior
		!!	@version 2020/11/24
		set_current_scene [ new_scene
			result;
			result = self.current_scene;
			self.current_scene = new_scene;
			return result;
		],
	private
		!!----------------------------------------------------------------------
		!! Escena actual
		current_scene 0,
;
