

!!==============================================================================
!!
!!	EL BARÓN
!!	Escena séptima
!!
!!==============================================================================
!!
!!	Archivo:		baron_scene-seven.xinf
!!	Autor(es):		Victor Gijsbers
!!					J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Español)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		Máquina-Z/Glulx
!!	Versión:		0.0
!!	Fecha:			2019/02/XX
!!
!!------------------------------------------------------------------------------
!!
!!	Este archivo forma parte de la ficción interactiva EL BARÓN.
!!
!!	EL BARÓN es software libre: usted puede redistribuirlo y/o
!!	modificarlo bajo los términos de la Licencia Pública General
!!	GNU publicada por la Fundación para el Software Libre, ya
!!	sea la versión 3 de la Licencia, o (a su elección) cualquier
!!	versión posterior.
!!
!!	EL BARÓN se distribuye con la esperanza de que sea útil,
!!	pero SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
!!	MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO.
!!	Consulte los detalles de la Licencia Pública General GNU
!!	para más información.
!!
!!	Debería haber recibido una copia de la Licencia Pública
!!	General GNU junto a EL BARÓN. En caso contrario, consulte
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (c) 2004, Victor Gijsbers
!!	Copyright (c) 2019, J. Francisco Martín
!!
!!------------------------------------------------------------------------------

Object final_overloop "On the landing"
  with name 'landing' 'corridor' 'upstairs',
       description [;
         print "The landing is enveloped by uneven darkness. ";
	 if(final_maartje_deur has open){print "To the north, the red door to Maartje's room is slightly ajar. ";} else {print "A red door to the north leads to the room of your daughter Maartje. ";};
	 "Next to the stairs down stands a wooden cupboard, above which a large ornate mirror in a gilded frame beholds you accusingly.";
	 ],
       s_to "As yet, there is no way back.",
       n_to final_maartje_deur,
       d_to "You have already undertaken that journey.",
       before [;
         Pray:
	   return true;

       ],
   has light transparent;

Object final_kastje "cupboard" final_overloop
  with name 'cupboard',
       description "This coarsely carved cupboard is one of the few pieces of furniture in the house that you have not made yourself: it comes from the inheritance of Hilde's grandmother. The two little doors in the front don't quite fit, a defect you have been planning to fix for years, though you somehow never got around to it.",
   has container openable ~open scenery;

   Object final_deurtjes "doors" final_overloop
     with name 'doors' 'little',
          description "The two little door in front of the cupboard, hanging slightly askew, give it an untidy and shabby appearance.",
	  before [;
	    Open: <<Open final_kastje>>;
	  ],
      has scenery pluralname;

Object final_fotoboek "album" final_kastje
  with pname
          '.p' 'album' '.p' 'book' '.p' 'photoalbum' '.p' 'photos' '.p' 'photographs' '.p' 'family-album' '.p' 'photo' '.p' 'next' 'page' '.or' 'photo' '.p' 'more' 'photos',
       gesloten 1,
       description [;
         self.gesloten = 0;

         print "With trembling hands you pick up the album and open it. There they are, the photos that document Maartje's idyllic youth: happy memories from a time that did not know what was to come. Merry pictures of a sweet and close family.";

	 Utils.press_any_key();

	 "You can indicate the division between the first and the second half of the album almost exactly. Gone is the quick smile, the innocent gaze, the openness to the whole world--in their place the expressionless mask with the eyes that have seen too much, a Maartje that has turned inward, living in her own mind. Everybody must have seen it. But nobody has done a thing.";
        ],
       before [;
         Consult, Open: <<Examine self>>;
	 Close: if (self.gesloten == 1) {
	     "The album is already closed.";
	   }
	   else {
             self.gesloten = 1;
	     "With a tortured sigh you close the album.";
	   };
       ],
   has ;

Object final_spiegel "mirror" final_overloop
 class Atrezzo,
  with name 'mirror' 'baron' 'glass',
       description "The face of the baron stares at you from the mirror.",
       before [;
         Attack:
	   move final_spiegel_kapot to final_overloop;
	   move final_scherf to final_overloop;
	   remove self;
	   "Furiously, you smash your fist against the baron's face as it is reflected by the mirror's glass. The mirror fractures, and falls down in many small fragments and one large shard.";
	 Take: "The mirror as a whole it too big to carry along with you.";
       ],
   has ;

   Object final_spiegel_kapot "broken mirror"
    class Atrezzo,
     with name 'mirror' 'shards' 'broken' 'glass' 'fragments',
          description "The glass of the mirror lies spread over the cupboard and the ground in many small fragments.",
          before [;
            Attack: "You have already broken the mirror.";
	    Take: "These small fragments of glass would be useless.";
           ],
     has ;

   Object final_spiegel_lijst "lijst" final_overloop
    class Atrezzo,
     with name 'frame' 'gilded',
          description "The excessively decorated frame, painted with gold, perfectly expresses the hollow merriment with which you and Hilde have tried to fill your house.",
	  before [;
	   Attack: "That will not solve anything.";
	  ],
      has ;

   Object final_scherf "shard"   ! Je hiermee snijden wordt via AttackWith() behandelt.
     with name 'shard' 'knife' 'glass',
          description "A large shard from the mirror, cold and sharp as ice.",
      has ;

Object final_maartje_deur
 class Item,
  with pname 'door' 'red' '.p' '.x' 'red' 'door' 'to' '.x' 'Maartje^s' '.or' 'room' '.or' 'bedroom' '.or' 'landing',
       short_name [;
          if (location == final_haarslaap) print "door to the landing";
	  else print "door to Maartje's room";
	  return true;
         ],
       description [;
          if (location == final_overloop) "This door, painted in too bright a red, leads to the room of your kidnapped daughter Maartje.";
	  else "This door leads back to the landing.";

	 ],
       found_in final_haarslaap final_overloop,
       door_dir [;
         if (location == final_haarslaap) {return s_to;}
	 else {return n_to;};
	 ],
       door_to [;
         if (location == final_haarslaap) return final_overloop;
	 else return final_haarslaap;
         ],
   has door openable ~open scenery;

Object final_over_trap "stairs" final_overloop
 class Atrezzo,
  with pname 'stairs' '.p' 'down' '.p' 'downstairs' '.p' '.x' 'wooden' 'stairs' '.x' 'down' '.p' 'downwards' '.p' 'outside',
       description "The wooden stairs circle downwards into ink-black depths.",
       before [;
         Climb, Go, Enter:
	   if (noun == self) {
	     <<Go d_obj>>;
	   };
       ],
   has ;




Object final_haarslaap "In Maartje's room"
  with name 'maartje^s' 'room' 'bedroom',
       description
         [;
	    print "In the dark room, Maartje's furniture stands around lovelessly. The dollhouse, untouched for years, pines away in a corner, while the bed and the desk are nothing but useful objects. Everything seems to wait for the black spectacle that will take place in the all too transparent darkness.^^";

	    switch(maartje.state) {
	      1:
	        if(final_deken_maartje has general)
		  "From the bed, Maartje watched you without emotion.";
	        "On the bed lies Maartje, naked.";
	      3: "The strangled corpse of Maartje lies on the bed.";
	      4: "The suffocated corpse of Maartje lies on the bed.";
	      5: "Maartje's corpse lies on the bed in a pool of blood.";

	    }
       ],
       before [;
         Smell: "The intoxicating smell of Maartje's body fills the room.";
	 Huil:
	   if(maartje.state == 1)
	     "Tears stream across your cheeks.";
	   "You cry bitter tears for the horrific murder you have just committed.";
	 Pray:
	   return true;


	 Go: if(noun == s_obj) {
	       if(maartje.state > 1) {
	         print "You throw a final glance at Maartje's dead body. Then you walk out of her room for the last time.";

		 Utils.press_any_key();

	         return true;
	       }

	       if(weg_uit_kamer_maartje.terug == 1) return true;
	       return false;
	     }
       ],
       s_to final_maartje_deur,
   has light transparent;

Object final_maartjebed "Maartje's bed" final_haarslaap
 class HeavyItem,
  with name 'bed' 'Maartje^s' 'child^s',
       description [;

	 switch(maartje.state) {
	      1:
	        if(final_deken_maartje has general)
		   "Maartje lies in her bed, a spacious child's bed of unpainted wood. She has pulled the sheets up to her chin and follows each of your movements with eyes that do not betray her thoughts.";
	        "Now that you have pulled away the blanket, Maartje lies on the bed nakedly. She does not attempt to hide her sex or her budding breasts, and the sight of her white flesh is like bellows for the fire of your lust.";
	      3: "With red welts around her neck, the lifeless body of Maartje lies on the bed.";
	      4: "The lifeless body of Maartje lies on the bed.";
	      5: "In a pool of her own blood, the lifeless body of Maartje lies on the bed.";

	    };
       ],
       before [;
	 Enter: <<Fuck maartje>>;
       ],
   has enterable container transparent scenery open proper;

   Object final_deken_maartje "Maartje's blanket" final_maartjebed
    class Atrezzo,
     with name 'blanket' 'blankets' 'eiderdown' 'sheet' 'sheets',
          description [;
	    if(self has general){
	      "Maartje has pulled the red-blue blanket up to her chin. It is her last shield.";
	    }
	    "The red-blue blanket protected Maartje against the cold, but worse enemies passed unhindered.";

	  ],
	  before [;
            LookUnder, Pull, Take:    ! give ~general
	        if(self hasnt general)
		  "The blanket hides nothing of Maartje's nakedness.";
		give self ~general;
		if(maartje.state == 1)
		  "You pull aside the blanket under which Maartje's nakedness was hidden. She does not move, and does not even attempt to hide her sex or her budding breasts. The sight of her white flesh is like bellows for the fire of your lust.";
		"You pull aside the blanket under which Maartje's naked body lay hidden.";
           ],
      has general;

   Object final_kussen "Maartje^s pillow" final_maartjebed
     with name 'pillow' 'Maartjes' 'Maartje^s' 'pillowcase',
          description
	     "In your thoughts you can already smell the scent of her hairs, which is also the smell of her pillow.",
          before [;
            Smell: <<Examine self>>;
          ],
      has proper;

Object final_raam_maar "window" final_haarslaap
  with name 'window' 'windowpane' 'outside',
       description "Outside the threatening forest is enveloped in hostile silence.",
       before [;
         Search: <<Examine self>>;
	 Close: if(self has open){give self ~open; "ou close the window, and a funereal silence returns.";};
	 Open: if(self hasnt open){give self open; "The window swings open, and the sound of the wind through the coniferous forest softly sneaks into the room. Somewhere, far away, you hear the howling of wolves.";};
	 Climb: "Too dangerous for going outside; not dangerous enough for commiting suicide.";
       ],
   has scenery openable ~open;

   Object final_sneeuw_maar "sneeuw" final_haarslaap
    class Atrezzo,
     with name 'snow' 'white' 'layer',
          description "During the past few days a thick layer of white snow has settled on the landscape. The branches of the trees bow down under their white burden.",
      has scenery;

   Object final_maan_maar "moon" final_haarslaap
    class Atrezzo,
     with name 'moon',
          description "From this side of the house the moon cannot be seen.",
      has scenery;

   Object final_bos_maar "forest" final_haarslaap
    class Atrezzo,
     with name 'forest' 'wood' 'woods' 'trees' 'tree' 'coniferous',
	  description "The forest lies as an ink-black mass upon the hills. But even the heart of this darkness is much lighter than the heart of man.",
      has scenery;

   Object final_heuvels_raam "hills" final_haarslaap
    class Atrezzo,
     with name 'hills' 'hill',
	  description "Monotonously, the hills stand in line.",
      has pluralname scenery;

   Object final_wolven_maar "wolves" final_haarslaap
    class Atrezzo,
     with name 'wolves' 'wolf',
          counter 0,
	  description [;
	    print "You can see no movement in the woods, at least not from this distance.";
	    if (final_raam_maar has open) {
	      print " But lamenting howls rise, hardly audible, from the far hills.";
	    };
	    "";
	  ],
	  before [;
	    Listen: if(self.counter == 0){self.counter = 1; "You lean out of the window to better hear the howling of a pack of wolves. Their many lamentations form a single melody, for a moment, and then suddenly cease. An ominous silence follows.";}
	    else {
	      "From the depths of the forest, now and then rises the howling of wolves.";
	    };
	  ],
      has scenery pluralname;

    Object final_wind "wind" final_haarslaap
     class Atrezzo,
      with name 'wind',
           before [;
	     Examine, Listen: "The wind sighs softly along the snow-laden branches of the coniferous forest.";
	   ],
       has ;

Object final_poppenhuis "dollhouse" final_haarslaap
 class HeavyItem,
  with name 'dollhouse',
       description "You built this dollhouse yourself: three stories, with little doors and windows that can actually open and close, all kinds of furniture, and wooden dolls with finely carved faces that make the house their home. Hilde made the curtains, the carpets and little clothes for the dolls. Now it stands in a corner, covered with dust, untouched for years. The paint is peeling away. The curtains have become pallid and wan",
       before [;
         Play: "That would be too cyncical.";
       ],
   has scenery container open;

   Object final_pop_deurtjes "doll's doors" final_poppenhuis
    class Atrezzo,
     with name 'doors' 'door' 'little' 'doll^s' 'handle' 'handles',
          description "Painted doors with moving handles separate the different rooms in the dollhouse. Since the doors do not have locks, the dolls have but little privacy.",
      has pluralname;

   Object final_pop_meubels "doll's furniture" final_poppenhuis
    class Atrezzo,
     with name 'furniture' 'chairs' 'tables' 'chair' 'table' 'little' 'doll^s',
          description "Small chairs are grouped around minature tables.",
      has pluralname;

   Object final_pop_raampjes "doll's windows" final_poppenhuis
    class Atrezzo,
     with name 'windows' 'window' 'doll^s' 'little',
          description "The sides of the dollhouse are adorned with doll-sized windows, in front of which hang moveable curtains.",
      has pluralname;

   Object final_pop_gordijntjes "doll's curtains" final_poppenhuis
    class Atrezzo,
     with name 'curtains' 'curtain' 'doll^s' 'little',
          description "Hilde made small curtains that fit in with the rest of the interior. The curtains don't quite fit, so what happens inside can never remain secret to doll society for very long.",
	  geopend 0,
	  before [;
	    Pull, Push:
	      if(self.geopend == 0) {
	        self.geopend = 1;
		"You open the curtains entirely. The world likes acting as if it is ignorant far too much; you will not grant her that convenience.";
	      } else {
	        self.geopend = 0;
		"You close the curtains again. As if it matters. When the curtains are open, people will close their eyes.";
	      }
	  ],
      has pluralname;

   Object final_pop_kleedjes "doll's carpets" final_poppenhuis
    class Atrezzo,
     with name 'carpets' 'carpet' 'little' 'doll^s' 'moth' 'moths',
          description "Soft carpets with wild patterns cover the wooden floor of the dollhouse. They are dusty and seem to be inhabited by moths.",
      has pluralname;


   Object final_pop_kleertjes "doll's clothing" final_poppenhuis
    class Atrezzo,
     with name 'clothing' 'clothes' 'doll^s' 'little',
          description "Hilde sowed these clothes with eye for the finest detail: dresses, pants, shirts, skirts, shoes, even tiny socks and hats have not been forgotten. It might well be that you have never seen Hilde as happy as when she could put all her love and creativity into this.",
      has pluralname;

   Object final_poppen "dolls" final_poppenhuis
     with
          name 'dolls' 'doll' 'father' 'mother' 'son' 'daughter',
          description [;
	      if(poppenhuis.played == 0) "Four dolls live in the dollhouse: a father, a mother, a son and a daughter. Father is sitting on the couch, reading a newspaper, while mother, probably busy cooking a meal, stands in the kitchen. The son gazes thoughtfully out of the window, while the daughter doll, dressed in her little red dress, lies on her bed in her bedroom.";
	   ],
	  before [;
	    Take: "Right now, the dolls are the only ones in your house that have a normal family life, and you're not planning to disturb that.";
	    Play: <<play final_poppenhuis>>;
	  ],
      has pluralname;

Object final_bureau "desk" final_haarslaap
 class HeavyItem,
  with name 'desk' 'table' 'beech',
       description "The small desk made of lacquered beech wood is covered with sheets of paper, notebooks and crayons.",
   has scenery supporter;

   Object final_papier "sheets of paper" final_bureau
    class Atrezzo,
     with name 'sheet' 'paper' 'sheets' 'blank' 'stacks' '.p' '.or' 'sheets' '.or' 'stacks' '.x' 'of' 'paper',
          description "Several neat stacks of blank paper lie on the left side of the desk, but dozens of drawings chaotically cover the rest of the tabletop.",
      has pluralname;

      Object final_tekeningen "drawings" final_bureau
       class Atrezzo,
        with name 'drawing' 'drawings',
	     description "The drawings Maartje has made are chaotic, dark and full of pain: mostly faces in contorted expressions, but also monsters, graves, and, on the nearest end of the table, a small girl in a red dress, all alone in a world of dark mouths that wish to swallow her. The bright red splashes from the paper, even in the weak light of the stars.",
	 has pluralname;

Object final_plafond "ceiling" final_haarslaap
 class Atrezzo,
  with name 'ceiling' 'up' 'scenes',
       description "Painted with sweet scenes, Maartje's ceiling is one big lie.",
   has ;

Object final_meubilair "furniture" final_haarslaap
 class Atrezzo,
  with name 'furniture',
       description "A bed, a desk and a dusty dollhouse make up the furniture in Maartje's room.",
   has ;


Object final_beer "teddy" final_haarslaap
  with name 'bear' 'teddy' 'teddybear' 'teddy-bear' 'toy' 'brown',
       description
         "You used to believe that toy animals came to life at night, and talked to each other in the dark. But Brown looks decidedly lifeless.",
       before [;
           Knuffel: "You take the bear into your strong arms, and hug him as if your life depends on it. A tear rolls over your cheek.";

	   Kiss: "You give the teddy a kiss on his brown snout.";

	   Take: if(final_beer has general && maartje.state == 1) {
	        "Maartje holds on to the bear tightly.";
	     }

       ],
   has male;


Object maartje "Maartje" final_maartjebed
  with name 'Maartje' 'daughter' 'child' 'girl',
       description [;
          switch(maartje.state) {
	      1:
	        if(final_deken_maartje has general)
	          "Maartje lies in her bed, wrapped tightly in her blanket, like every night. Her apathetic eyes, which seem to indicate that she has turned off all her feelings, hurt you more than her despair would have. She looks like this every night.";
	        "Now that you have pulled away the blanket, Maartje lies on the bed nakedly. She does not attempt to hide her sex or her budding breasts, and the sight of her white flesh is like bellows for the fire of your lust.";

	      3: "With red welts around her neck, the lifeless body of Maartje lies on the bed.";
	      4: "The lifeless body of Maartje lies on the bed.";
	      5: "In a pool of her own blood, the lifeless body of Maartje lies on the bed.";
	    }
       ],
       state 1,    ! 1 = alive, 3 = strangled, 4 = suffocated, 5 = cut
       spoken 0,
       before [;
         Fuck:
	   !! MaartjeVrij();
	   return true;
	 Touch:
	   return true;
	 Attack:
	   if(self.state == 1) {
	     !! DoodMaartje(3);
	     return true;
	   } else {
	     "She is dead already.";
	   }
	 Spreek:
	   if(self.state > 1) "You cannot talk to the dead.";
	   self.spoken = 1;
	   return true;
       ],
       life [;
         Give:
	   if(noun == final_beer && second == self && parent(final_beer) == player) {
	     if(self.state > 1) {
	       move final_beer to final_maartjebed;
	       "You lay down Brown on the dead body of your daughter, and put her arms around him. They look peaceful.";
	     }
	     move final_beer to final_maartjebed;
	     give final_beer general;
	     "~Here, take Brown,~ you tell Maartje.^^
	     Wordlessly she takes the bear from your hands and pulls it tightly against her breast.";
	   }

	   if(noun == final_scherf && second == self && parent(final_scherf) == player) {

	     print "You stretch out the hand in which you hold the sharp piece of glass.^^";


	     return true;
	   }

	   if(second == self && noun ~= final_scherf && noun ~= final_beer) "You don't have to give that to Maartje.";

	   return false;

         Show:
           if(noun == final_beer && second == self && parent(final_beer) == player) {
	     "Maartje eyes Brown longingly.";
	   }

	   if(noun == final_scherf && second == self && parent(final_scherf) == player) {
	     "Maartje eyes the sharp glass apprehensively.";
	   }

	   if(second == self && noun ~= final_scherf && noun ~= final_beer) "It provokes no particular reaction.";

	   return false;

	 Kiss:
	   return true;

       ],
   has female animate proper transparent;





Object pray_dialoog
 class Character,
  with vergeef 0,
       quip [a b;
             switch (a) {
	       12:
	       13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 4,
                                   2,
                                   3,
				   4,
				   5);

               21: "~Merciful God, please forgive me the crime I am about to commit.~";
               22: self.qoff(2);
	           self.vergeef = 1;
	           "Do you believe that God will forgive your crime?^";

               23:  self.qqon  = true;
		    self.killz = true;
                    self.killq = true;
	       24: return self.qlist(b, 2,
                                   6,
				   7);

               31: "~Merciful God, forgive me for killing my daughter!~";
               32: self.qoff(3);
	           "Do you believe that God will forgive your crime?^";

               33:  self.qqon  = false;
		    self.killz = true;
                    self.killq = true;
	       34: return self.qlist(b, 2,
                                   6,
				   7);

               41: "~Please, God, give me the strength to conquer my lust.~";
               42: self.qoff(4);
	           "Does God answer your prayer?^";

               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       44: return self.qlist(b, 2,
                                   6,
				   7);

               51: "~Dear God, I don't ask anything for myself, but please save my daughter Maartje.~";
               52: self.qoff(5);
	           "Will she ever be saved by God?^";

               53:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       54: return self.qlist(b, 2,
                                   6,
				   7);

               61: "Yes.";
               62: return true;

               63:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;



               71: "No.";
               72: return true;

               73:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;



	     }
             rfalse;

       ],
       dochter_dood [;
         self.qoff(2);
	 self.qoff(4);
	 self.qoff(5);
	 if(self.vergeef == 0) self.qqon(3);
	 return true;
       ],
   has concealed;


Object dood_mij_bij_maartje_dialoog
 class Character,
  with quip [a b;
             switch (a) {
	       12:
	       13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 3,
                                   2,
                                   3,
				   4);

               21: "~I do it for you.~";
               22: return true;

               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               31: "~I deserve it. It is my punishment.~";
               32: return true;

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               41: "~I am sorry. I am sorry about everything.~";
               42: return true;

               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
             }
	   ],
   has concealed;

Object scherf_aan_haar_dialoog
 class Character,
  with quip [a b;
             switch (a) {
	       13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 3,
                                   2,
                                   3,
				   4);

               21: "~Go on. Take out all your anger on me.~";
               22: print "Maartje looks at you, frightened...^^";

               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       24: return self.qlist(b, 2,
                                   5,
                                   6);

               31: "~I cannot do it myself. Here is a shard, and here is my carotid artery.~";
               32: print "Maartje takes a frightened look at the sharp piece of glass, then at the part of your neck you point to.^^";

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       34: return self.qlist(b, 2,
                                   7,
                                   8);

               41: "~I have ruined your life. This is the only way out.~";
               42: print "Hesitatingly, Maartje takes the sharp piece of glass from your hand.^^";

               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       44: return self.qlist(b, 2,
                                   9,
                                   10);

               51: "... and then shakes her head, without saying a word and on the verge of tears.";
               52: print "Defeated, you pull back your hand.^";

               53:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;


               61: "... but then she takes the piece of glass from you. In her eyes burns deep hatred.";
               62:
	           print "You get down to your knees, next to the bed, undressed. The sharp glass in Maartje's hand moves slowly towards you, while tears stream across her flushed face. You would like to close your eyes for your approaching doom, but you force yourself to keep watching. That is part of your punishment.";

		   Utils.press_any_key();

		   print "~Bastard,~ Maartje whisper, ~dirty, dirty bastard.~ Her entire body convulses with her weeping. Then she mercilessly stabs the shard into...^^";

               63:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       64: return self.qlist(b, 3,
	                           11,
				   12,
				   13);

               71: "In despair Maartje shakes her head. ~Don't do this,~ she whispers.";
               72: print "~Is not even this a solution?~, you whimper. ~Dear God, is there no way to escape?~^";

               73:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;


               81: "Then she takes the shard, while you kneel down next to her and offer her--weeping--your neck.";
               82:
			!! ZijDoodtMijMetScherf(1);
	           return true;

               83:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               91: "But she sits with the shard in her hands, as if she doesn't know what to do with it.";
               92:
	           print "~It...it doesn't matter. Give it back,~ you say after a minute, and pull the glass out of her unresisting hands.^";

               93:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               101: "She looks at you imploringly, but you show no sign of mercy. Then she pushes the shard into her wrist.";
               102:
	            print "You force yourself to watch as she pulls the razor-sharp glass over her wrist, perpendicular to her veins. Only a little blood trickles out.^^
		    ~You have to cut in the direction of the arteries,~ you say to her. Your voice is dead and emotionless. Maartje looks up at you; tears stream down her cheeks--but she does what you say, pushes the shard once again deeply into her flesh and tears open her artery. Red blood spurts out in a large jet, across her body and the bed.";
!
		    Utils.press_any_key();

		    move final_scherf to final_haarslaap;
		    maartje.state = 5;

		    print "You cannot tear your eyes from the horrific spectacle. Slowly, Maartje falls back into her bed. The shard falls from her now strengthless hand. The blood keeps flowing, but ever slower, and Maartje becomes paler and paler, breath less and less often en finally closes her eyes. Then, on the moment of her death, an expression on her face:...^^";

               103:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       104:  return self.qlist(b, 3,
                                    14,
                                    15,
				    16);

               111: "...your carotid artery.";
               112:
!! ZijDoodtMijMetScherf(1);

               113:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

	       121: "...your belly.";
               122:
!! ZijDoodtMijMetScherf(2);

               123:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               131: "...your crotch.";
               132:
!! ZijDoodtMijMetScherf(3);

               133:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

               141: "...a weak smile.";
               142:
	            return true;

               143:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
               151: "...an expression of utter peace.";
               152:
	            return true;

               153:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
               161: "...an expression of pure despair.";
               162:
	            return true;

               163:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

             }
	   ],
   has concealed;

Object maartje_zelfmoord_dialoog
 class Character,
  with quip [a b;
             switch (a) {
	       12: pray_dialoog.dochter_dood();
	           print "Was this truly best for her?^^";
	       13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 2,
                                    2,
                                    3);

               21: "Yes. She could never have become happy again.";
               22: return true;

               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;


               31: "No. But I could not watch her unhappiness any longer.";
               32:
	           return true;

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	     }
             rfalse;

       ],
   has concealed;

Object maartje_zoen_eerste_dialoog
 class Character,
  with quip [a b;
             switch (a) {
               13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 3,
                                    2,
                                    3,
				    4);

               21: "Once, tenderly, on her brow.";
               22: if(maartje.state > 1) {
	             "With your lips you press a kiss on Maartje's pale brow, by way of farewell.";
	           } else {
	             "Maartje goes rigid as soon as you lean towards her, but you only kiss her lightly on the forehead.";
		   }

               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;


               31: "Longingly, on her mouth.";
               32:
!! MaartjeZoen(1);
	           return true;

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

	       41: "Wildly, across her entire body.";
               42:
!! MaartjeZoen(2);
	           return true;

               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	     }
             rfalse;

       ],
   has concealed;

Object maartje_streel_eerste_dialoog
 class Character,
  with quip [a b;
             switch (a) {
               13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 3,
                                    2,
                                    3,
				    4);

               21: "Lightly caress her lustrous hair with your fingers.";
               22: if(maartje.state == 1) {
	             "You let your fingers glide through her fragrant, full hair. Maartje looks frightened.";
	           } else {
	             "You let your fingers glide through her fragrant, full hair. Her dead eyes stare vacantly into nothing.";
		   }

               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;


               31: "Passionately caress her cheeks, her neck, her arms...";
               32:
!! MaartjeStreel(1);
	           return true;

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

	       41: "Caress her wildly and full of lust.";
               42:
!! MaartjeStreel(2);
	           return true;

               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	     }
             rfalse;

       ],
   has concealed;


Object weg_uit_kamer_maartje
 class Character,
  with terug 0,
       quip [a b;
             switch (a) {
	       12: "Why do you walk to the landing?";
               13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 2,
                                    2,
                                    3);

               21: "I have succeeded at restraining myself. I have conquered my lust.";
               22: self.terug = 1;
	           !! IkOverwinLust();
	           return false;
               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

	       31: "I just walk back to get something.";
               32:  self.terug = 0;
	            return true;

               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	     }
             rfalse;

       ],
   has concealed;


Object maartje_spreek_dialoog
 class Character,
  with terug 0,
       quip [a b;
             switch (a) {
	       12: "~Maartje,~ you stammer, ~I...~";
               13: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       14: return self.qlist(b, 3,
                                    2,
                                    3,
				    4);

               21:
	           "\[Crestfallen\] ~I am the worst father you could possibly have had. The most worthless creature, too lowly to even be allowed to see you--and yet it was me who was made your parent.~";
               22: print "Maartje keeps a fearful silence.^^";
               23:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       24: return self.qlist(b, 5,
	                            5,
                                    6,
                                    7,
				    8,
				    9);

               31:
	           "\[Despairingly\] ~I cannot justify what I have done all those years. What is right is right, and what is crooked is crooked, and what was ever more crooked than this? But perhaps, just maybe, I can try to explain it.~";
               32: print "Maartje keeps a fearful silence.^^";
               33:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       34: return self.qlist(b, 5,
	                            5,
                                    6,
                                    7,
				    8,
				    9);

               41:
	           "\[Imploringly\] ~Do not hate me, sweet Maartje, please. I know what I have done and I know what I am and I know I ask the impossible, but please please please, do not hate me.~";
               42: print "Maartje keeps a fearful silence.^^";
               43:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       44: return self.qlist(b, 5,
	                            5,
                                    6,
                                    7,
				    8,
				    9);

               51:
	           "~I dreamt tonight, about wolves, gargoyles and barons. A bizarre dream, but is has opened my eyes.~";
               52: self.qoff(5);
	           print "~I dreamt,~ you continue, ~that I had to save you from the claws of an evil baron. But as I was on my way to his castle, my path was blocked by a hungry she-wolf who was looking for food for her child. ";

		   switch(wolvin.status) {
		     5, 6: print "I killed her.~^^";
		     25, 26: print "I killed her, but I did help her child.~^^";
		     7: print "I sacrificed your diary to her.~^^";
		     8: print "I sacrificed Brown to her.~^^";
		     9,15: print "I calmed her, so I could walk past her.~^^";
		     10:
		        print "First I came close to her, and when I had lulled her into a false sense of security, I suddenly killed her.~^^";
		     11: print "I ran away as fast as I could.~^^";
		     12:
		         print "With utter self-control I simply walked past her, as if she did not exist.~^^";
		     13:
		         print "With the courage of despair I jumped over her, in order to get to you.~^^";
		     14:
		         print "I shared her grief, and this created a sympathy that conquered our enmity.~^^";
		     99:
		         print "I fed myself to her and her young, so that they would not die from starvation.~^^";
		     100: print "I hesitated for too long, and the she-wolf tore me apart.~^^";

		   }

               53:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       54: return self.qlist(b, 3,
                                    11,
                                    12,
				    13);

               61:
	           "~You mustn't hate me, Maartje, for I am not guilty. I can't help it.~";
               62: self.qoff(6);
               63:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       64: return self.qlist(b, 2,
                                    20,
                                    21);

               71: "~I...I want to make things all right again, Maartje. I want to make things all right.~";
               72: self.qoff(7);
	           print "Silently, Maartje stares into the darkness.^^";
               73:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       74: return self.qlist(b, 3,
                                    24,
                                    25,
				    26);

               81:
	           "~I will not ask you for forgiveness, not here and not now, because I know it is impossible to give that to me at this time.~";
               82: self.qoff(8);
               83:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       84: return self.qlist(b, 2,
                                    27,
                                    28);

               91:
	           "~I want to promise you something, Maartje, very solemnly. This was the last time. It will never happen again.~";
               92: self.qoff(9);
	           print "Maartje's face shows no sign of her having heard you.^^";
               93:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       94: return self.qlist(b, 2,
                                    31,
                                    32);

               103: self.qtype = 0;
	            self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       104:  return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               111: switch(wolvin.status) {
		     5, 6:
		        "~Only those who are prepared to go to any extreme can solve their problems.~";
		     25, 26:
		        "~Even if it is not enough, it is still better to try to set your crimes aright, than not to try at all.~";
		     7:
		        "~It didn't even occur to me that your thoughts might be a much more potent key to your liberation than my deeds.~";
		     8:
		        "~Even though Brown gave you so much more than I ever did.~";
		     9,15:
		        "~I realised that I had to be calm and rational to arm myself against the fire and the baron; all too often did I lat me passions and emotions carry me away.~";
		     10:
		        "~A treacherous misdeed, that showed me how rotten I was at the core.~";
		     11:
		        "~I then realised that I was a coward, and that I had to learn and face my problems instead of running away from them.~";
		     12:
		        "~That was brave. It meant I had learnt not to close my eyes for my problems.~";
		     13:
		        "~That was brave. It meant I had learnt to act when it was necessary to do so.~";
		     14:
		        "~Thus I learnt that only when everyone who is locked into a painful situation learns to understand the others, a solution can be found.~";
		     99:
		        "~That was noble. Now, too, I wish to sacrifice myself in order to undo my mistakes.~";
		     100:
		        "~Thus I learnt that I have to act in order to achieve anything.~";
		   }

               112:
	           print "~When I continued my journey, I met a gargoyle who tried to show me the true nature of my problem. He, too, was the prisoner of a dark circle of crime and pain. ";

		   switch(gar_stage3.afloop) {
		     0: print "But I didn't want to listen to him.";
		     2: print "I told him he was a monster, and I killed him.";
		     3: print "I told him he would never be able to change, and I killed him.";
		     4: print "I killed him, our of mercy.";
		     5: print "I told him he would never be able to change, and thereupon he committed suicide.";
		     6: print "I told him suicide was the only escape, and the destroyed himself.";
		     7:
		        print "I told him that we can always hope for a good ending, and thus we parted.";
		     8: print "I told him he would never be able to change, and in despair we parted.";
		     9: print "I told him he would be forever guilty, and dejectedly we parted.";

		   }

		   print "~^^";

               113:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       114: return self.qlist(b, 3,
                                    14,
                                    15,
				    16);


               121: switch(wolvin.status) {
		     5, 6:
		        "~But later I realised that I did not have the right to put my problem so far above hers that I was willing to kill for it.~";
		     25, 26:
		        "~Even if the parents are our worst enemies, it is still our duty to help the children. They cannot fend for themselves.~";
		     7:
		        "~And thus is was again my weakness that destroyed your life.~";
		     8:
		        "~And thus it was again my weakness that destroyed your security.~";
		     9,15:
		        "~You can never solve a problem alone. You always have to solve it together with the other person, and in order to make that possible, you must first put the hate and the fear to rest.~";
		     10:
		        "~It was only then that I realised that my wish to get to you was stronger than the motherly love of the she-wolf--and yet no parent could have loved her child more than she did.~";
		     11:
		        "~But then I found my courage again and returned. The she-wolf turned out to be gone. Even if things seem to be against you and every step seems to take you further from your goal, you can still overcome each problem in the end.~";
		     12:
		        "~That is how I always did it: I learned to live with my problems, and never really tried to solve them.~";
		     13:
		        "~That is how I always did it: I learned to live with my problems, and never really tried to solve them.~";
		     14:
		        "~Thus I learned that my sorrow could give me the strength to hold out against my wildness.~";
		     99:
		        "~But in spite of the sacrifice, the problems remained the same. I was still on my way to the baron, and my penitence did not help.~";
		     100:
		        "~Thus I saw that motherly love conquers all, in the end--and that gave me hope.~";
		   }
               122:
	            print "~When I continued my journey, I met a gargoyle who tried to show me the true nature of my problem. He, too, was the prisoner of a dark circle of crime and pain. ";

		   switch(gar_stage3.afloop) {
		     0: print "But I didn't want to listen to him.";
		     2: print "I told him he was a monster, and I killed him.";
		     3: print "I told him he would never be able to change, and I killed him.";
		     4: print "I killed him, our of mercy.";
		     5: print "I told him he would never be able to change, and thereupon he committed suicide.";
		     6: print "I told him suicide was the only escape, and the destroyed himself.";
		     7:
		        print "I told him that we can always hope for a good ending, and thus we parted.";
		     8: print "I told him he would never be able to change, and in despair we parted.";
		     9: print "I told him he would be forever guilty, and dejectedly we parted.";

		   }

		   print "~^^";
               123:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       124: return self.qlist(b, 3,
                                    14,
                                    15,
				    16);

               131: switch(wolvin.status) {
		     5, 6:
		        "~But violence is never a solution, and only ever worsens things.~";
		     25, 26:
		        "~All too easily I eased my conscience. When you want to put things aright, you should be willing to do everything that is required.~";
		     7:
		        "~The memories of those bad years had to be destroyed before you could find any kind of release.~";
		     8:
		        "~You had already lost your childhood anyway--it was your adulthood that I was trying to save.~";
		     9,15:
		        "~That sounds very beautifully, but it is our calm that is our doom. He who doesn't dare to fight becomes an accomplice because he allows what he should prevent.~";
		     10:
		        "~I acted from pity and mercy, because they couldn't have survived the winter. Sometimes the hardest solution is the best.~";
		     11:
		        "~I simply couldn't make myself hurt someone else. I couldn't do it: create even more pain than I had already done. I don't want to hurt anyone evermore.~";
		     12:
		        "~Why didn't she jump at me? Why didn't she dare to do that, even though it was the only possibility of feeding her child? I decided not to be that passive if I ever found a solution.~";
		     13:
		        "~Why didn't she attack me? Why didn't she dare to do that, even though it was the only possibility of feeding her child? I decided not to be that passive if I were to find a solution to my problems.~";
		     14:
		        "~Thus I saw that wallowing in self-pity leads to passivity, and that the she-wolf neglected her young because she thought too much about her own suffering.~";
		     99:
		        "~That was the easy way out. I will have to learn to live with my mistakes, instead of fleeing in death.~";
		     100:
		        "~Thus I learned that not acting, total passivity, could be the solution for me.~";
		   }
               132:
	            print "~When I continued my journey, I met a gargoyle who tried to show me the true nature of my problem. He, too, was the prisoner of a dark circle of crime and pain. ";

		   switch(gar_stage3.afloop) {
		     0: print "But I didn't want to listen to him.";
		     2: print "I told him he was a monster, and I killed him.";
		     3: print "I told him he would never be able to change, and I killed him.";
		     4: print "I killed him, our of mercy.";
		     5: print "I told him he would never be able to change, and thereupon he committed suicide.";
		     6: print "I told him suicide was the only escape, and the destroyed himself.";
		     7:
		        print "I told him that we can always hope for a good ending, and thus we parted.";
		     8: print "I told him he would never be able to change, and in despair we parted.";
		     9: print "I told him he would be forever guilty, and dejectedly we parted.";

		   }

		   print "~^^";
               133:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       134: return self.qlist(b, 3,
                                    14,
                                    15,
				    16);

               141: switch(gar_stage3.afloop) {
		     0: "~Fool that I was; as if I could not have learnt from his story.~";
		     2:
		        "~But if he was a monster, what am I? A monster as well. Someone who deserves to die.~";
		     3:
		        "~But if he couldn't change, than surely I couldn't change either? Did I also deserve death?~";
		     4: "~But if death was best for him, why wouldn't the same hold for me?~";
		     5: "~But if he couldn't change, than surely I couldn't change either? Should I make an end to my life as well?~";
		     6: "~But if death was best for him, why wouldn't the same hold for me?~";
		     7: "~But now I can see that there was no ground for hope.~";
		     8: "~But if he couldn't change, than surely I couldn't change either? Thus I strengthened my own despair.~";
		     9: "~Thus was I taught that my guilt could never be destroyed.~";

		   }
               142: print "~Finally I met the baron, my great enemy. ";

	            switch(baron.state) {
		      0: print "I killed him.";
		      1: print "But I did not talk to him.";
		      2: print "I showed him the infinite guilt we both bore, and left him crying and given over to despair.";
		      3: print "But he showed me that neither of us was to blame; both of us simply acted the way we had to act, without ever having a real choice.";
		      4: print "I forgave him his sins. Truly, they had always been mine anyway.";

		    }

	            print "~^^";
               143:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       144: return self.qlist(b, 3,
                                    17,
                                    18,
				    19);

               151: switch(gar_stage3.afloop) {
		     0: "~Later, I saw that I had once more tried to flee the truth.~";
		     2:
		        "~But why did I call him a monster, I, who should have been able to see that even the worst guilt can still be purely human?~";
		     3:
		        "~But how could I know that he would never be able to change? Had I seen right through him already, though I didn't even know whether I myself could change?~";
		     4:
		        "~But wasn't death far too easy a way out? Shouldn't he have carried his guilt, even as we all have to carry our guilt?~";
		     5: "~But how could I know that he would never be able to change? Had I seen right through him already, though I didn't even know whether I myself could change?~";
		     6: "~But wasn't death far too easy a way out? Shouldn't he have carried his guilt, even as we all have to carry our guilt?~";
		     7: "~And thus I learned to cherish some hope for my own situation as well.~";
		     8: "~But how could I know that he would never be able to change? Had I seen right through him already, though I didn't even know whether I myself could change?~";
		     9: "~But was I right in putting so much emphasis on guilt? Is guilt so important, in the end?~";

		   }
               152: print "~Finally I met the baron, my great enemy. ";

	            switch(baron.state) {
		      0: print "I killed him.";
		      1: print "But I did not talk to him.";
		      2: print "I showed him the infinite guilt we both bore, and left him crying and given over to despair.";
		      3: print "But he showed me that neither of us was to blame; both of us simply acted the way we had to act, without ever having a real choice.";
		      4: print "I forgave him his sins. Truly, they had always been mine anyway.";

		    }

	            print "~^^";
               153:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
               154: return self.qlist(b, 3,
                                    17,
                                    18,
				    19);

               161: switch(gar_stage3.afloop) {
		     0: "~And that was how it should be; we all must come to terms with our own deeds.~";
		     2:
		        "~But he was no monster, he was as human as I am, and I did not have the right to kill him.~";
		     3:
		        "~But now I realise that I made an infinite mistake: everyone can always change--if only they are receive the right aid.~";
		     4:
		        "~But I did him a great wrong by doing so, because I took his dignity from him. Only he himself could have made that ultimate choice.~";
		     5: "~But now I realise that I made an infinite mistake: everyone can always change--if only they are receive the right aid.~";
		     6: "~Only, only...doubt nagged at my soul, doubt whether after all there might not have been a better solution for his trouble than the infinite darkness of death.~";
		     7: "~And perhaps that this hope, this one single remark of mine, will give him the strength to fight against his dark fate.~";
		     8: "~But now I realise that I made an infinite mistake: everyone can always change--if only they are receive the right aid.~";
		     9: "~But I don't believe it--any crime can be redeemed!~";

		   }
               162: print "~Finally I met the baron, my great enemy. ";

	            switch(baron.state) {
		      0: print "I killed him.";
		      1: print "But I did not talk to him.";
		      2: print "I showed him the infinite guilt we both bore, and left him crying and given over to despair.";
		      3: print "But he showed me that neither of us was to blame; both of us simply acted the way we had to act, without ever having a real choice.";
		      4: print "I forgave him his sins. Truly, they had always been mine anyway.";

		    }

	            print "~^^";
               163:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       164: return self.qlist(b, 3,
                                    17,
                                    18,
				    19);

               171: switch(baron.state) {
		     0: "~But he was me, and now I will also have to kill myself.~";
		     1: "~Thus I once more avoided the confrontation.~";
		     2: "~I have learnt to see how guilty I am. I will not walk away from that knowledge again.~";
		     3: "~He was right. And that is the worst thing of all.~";
		     4: "~And now I will have to pay for it.~";
		   }

               173: self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       174: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               181: switch(baron.state) {
		     0: "~But that was no solution. A real solution is always much harder and much more painful than a violent one.~";
		     1: "~Finally I understood that he was not my enemy--it was me.~";
		     2: "~With remorse starts the change. Whether there will ever be forgiveness--that is something else.~";
		     3: "~He was right. And yet I will not give up hope of changing, some day.~";
		     4: "~But before I can be forgiven, a lot will have to happen.~";
		   }

               183: self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       184: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

	       191: switch(baron.state) {
		     0: "~How blind I was: even then I did not understand the confrontation. Only now has everything become clear, and only now I see how doomed I am.~";
		     1: "~The fire was too strong; and now I am here again, the same as every night.~";
		     2: "~He was crushed by his feeling of guilt. And I will be crushed just the same.~";
		     3: "~But now I am again in doubt. His words seemed true, but the burden of guilt cannot just be talked away.~";
		     4: "~It is all my fault. From today, I will acknowledge that.~";
		   }

               193: self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       194: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);



               201:
	             "Sink to your knees, crying. ~I can't help it, I can't help it...please, don't hate me, for I can't help it...~";
               202:
	             print "Tears stream across your face, and for long minutes you can do nothing but cry.^^";
		     return true;
               203:  self.qqon  = true;
                     self.killz = true;
                     self.killq = true;

               211:
	             "~I have tried not to do it, Maartje, really, with all my power I have fought against it. But is too strong! No matter what I do, each time my lust defeats whatever is good and beautiful in my soul. I do not have a choice, I am not guilty, I am forced to do things I do not want to do by something which is stronger than me...do not hate me, for I am innocent...~";
               212:
               213:  self.qqon  = true;
                     self.killz = true;
                     self.killq = true;
	       214:  return self.qlist(b, 2,
                                    22,
                                    23);


               221:
	             "This is what you believe.";
               222:

               223:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       224: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               231:
	             "But you know that is not true.";
               232:

               233:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       234: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               241:
	             "~I want to set thing aright by seeking help, both for me and for you.~";
               242:
	             print "Maartje looks at you, unsure what to make of this.^^";
               243: self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       244: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               251:
	             "~I want to set thing aright by showering you with gifts and presents! I will give you everything you desire.~";
               252:
	             print "For a moment, a spasm of pain appears on Maartje's expressionless face.^^";
               253:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       254: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               261:
	             "~I want to set thing aright by disappearing from your life forever.~";
               262:
	             print "Maartje looks at you, unsure what to make of this.^^";
               263:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       264: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               271:
	             "~I know what I have done, and I want to you to know that I am more sorry than I can ever tell you. I have no justification. The only thing I can say is that I will do anything, literally anything, to mend that which I have broken.~";
               272:
               273:  self.qqon  = true;
                     self.killz = true;
                     self.killq = true;
	       274:  return self.qlist(b, 2,
                                    29,
                                    30);

               281:
	             "~I know what I have done. I know what I have destroyed. I have no justification. But by God, I sweat that I will do anything that is possible in order to hurt you no more.~";
               282:
               283:  self.qqon  = true;
                     self.killz = true;
                     self.killq = true;
	       284:  return self.qlist(b, 2,
                                    29,
                                    30);

	       291:
	             "\[Despairingly\] ~You will probably never be able to forgive me. I will have to learn to live with that. It cannot be understood, what I have done; I will remain a dark shadow of your past forever. Nothing can be done about that.~";
               292:  print "The silence presses on your mind.^^";
               293:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       294: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               301:
	             "\[Almost in tears\] ~I do not dare to hope that you will ever be able to forgive me...but I do hope that once, in a far future, you will be able to understand me just a little bit. I am no monster, Maartje; whatever I am, I am no monster. I hope, with all my heart, that you will once see that.~";
               302:  print "The silence presses on your mind.^^";
               303:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       304: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               311:
	             "I have lied so much, of course she doesn't believe me.";

               313:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       314: return self.qlist(b, 6,
	                            5,
                                    6,
                                    7,
				    8,
				    9) | self.qlist(b-6,     40);

               321:
	             "\[Whispering inaudibly\] ~Really, sweet girl, really. Never again.~";

               323:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;
	       324:
				!! return self.qlist(b, 6, 5, 6, 7, 8, 9) | self.qlist(b-6,     ) | self.qlist(b-6,     40);

               401:
	             "There is nothing left to say.";
               402: return true;
               403:  self.qqon  = true;
                    self.killz = true;
                    self.killq = true;

	     }
             rfalse;

       ],
   has concealed;
